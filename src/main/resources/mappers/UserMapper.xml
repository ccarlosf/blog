<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ccarlos.blog.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.ccarlos.blog.model.User">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="salt" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="nickname" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="mobile" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="avatar" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, username, password, salt, nickname, email, mobile, avatar, role, create_time, update_time
    </sql>
    <!-- 新增用户 -->
    <insert id="insertUser" parameterType="com.ccarlos.blog.model.User">
        INSERT INTO
        user(username, password, salt, nickname, email, mobile, avatar, role, create_time, update_time)
        VALUES
        (#{username},#{password},#{salt},#{nickname},#{email},#{mobile},#{avatar},#{role},now(),now())
    </insert>

    <!-- 查询该用户名个数 -->
    <select id="checkUsername" resultType="int" parameterType="string">
        SELECT count(1) FROM  user
        WHERE  username = #{username}
    </select>

    <!-- 查询该邮箱个数 -->
    <select id="checkEmail" resultType="int" parameterType="string">
        SELECT count(1) FROM  user
        WHERE  email = #{email}
    </select>

    <!-- TODO 返回类型 -->
    <!-- 根据用户名、密码查询用户 -->
    <select id="selectByUsernameAndPassword" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user WHERE username = #{username} AND password = #{password}
    </select>

    <!-- 根据用户名或者邮箱查询用户 -->
    <select id="selectByUsernameOrEmail" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        <where>
            <if test="username != null">
                AND username = #{username}
            </if>
            <if test="email !=null">
                AND email = #{email}
            </if>
        </where>
    </select>

    <!-- 查询用户列表 -->
    <select id="selectUserByUsername" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        <where>
            <if test="username != null">
                and username like CONCAT(CONCAT('%',#{username}), '%')
            </if>
        </where>
    </select>

    <!-- 根据用户id删除用户 -->
    <delete id="deleteUserById" parameterType="java.lang.Integer">
        DELETE FROM user
        WHERE id = #{id}
    </delete>

    <!-- 根据用户id查询用户 -->
    <select id="selectUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE id = #{id}
    </select>

    <!-- 查询不是当前用户，该邮箱是否存在 -->
    <select id="checkEmailByUserId" resultType="int" parameterType="map">
        SELECT count(1) FROM user
        WHERE email =#{email}
        AND id !=#{id}
  </select>

    <update id="updateUser" parameterType="com.ccarlos.blog.model.User">
        UPDATE user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="salt != null">
                salt = #{salt},
            </if>
            <if test="nickname != null">
                nickname = #{nickname},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="mobile != null">
                mobile = #{mobile},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            <if test="role != null">
                role = #{role},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = now(),
            </if>
        </set>
        where id = #{id}
    </update>
</mapper>